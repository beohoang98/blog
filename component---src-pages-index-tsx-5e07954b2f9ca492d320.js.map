{"version":3,"file":"component---src-pages-index-tsx-5e07954b2f9ca492d320.js","mappings":"iMAmFA,UA3E8DA,IAGxD,YAHyD,KAC7DC,EAAI,SACJC,GACD,EACC,MAAMC,GAAqB,QAAT,EAAAF,EAAKG,YAAI,OAAc,QAAd,EAATC,EAAWC,oBAAY,WAAd,EAATC,EAAyBC,QAAK,QAC1CC,EAAQR,EAAKS,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,QAENC,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACZ,SAAUA,EAAUM,MAAOL,EAAUY,SAAAA,EAC3CC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,KACJD,EAAAA,EAAAA,KAAAA,IAAAA,CAAAD,SAAG,kKAUPF,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACZ,SAAUA,EAAUM,MAAOL,EAAUY,SAAAA,EAC3CC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,KACJD,EAAAA,EAAAA,KAAAA,KAAAA,CAAIE,MAAO,CAAEC,UAAW,QAASJ,SAC9BN,EAAMW,KAAKC,IAAS,4BACnB,MAAMb,GAAwB,QAAhB,EAAAa,EAAKC,mBAAW,aAAhBC,EAAkBf,SAAoB,QAAf,EAAIa,EAAKG,cAAM,aAAXC,EAAaC,MAEtD,OACEV,EAAAA,EAAAA,KAAAA,KAAAA,CAAAD,UACEF,EAAAA,EAAAA,MAAAA,UAAAA,CACEc,UAAU,iBACVC,WAAS,EACTC,SAAS,4BACTC,KAAK,UAASf,SAAAA,EAEdF,EAAAA,EAAAA,MAAAA,SAAAA,CAAAE,SAAAA,EACEC,EAAAA,EAAAA,KAAAA,KAAAA,CAAAD,UACEF,EAAAA,EAAAA,MAACkB,EAAAA,KAAI,CAACC,IAAe,QAAX,EAAAX,EAAKG,cAAM,aAAXS,EAAaP,OAAQ,GAAIQ,SAAS,MAAKnB,SAAAA,GAC5B,QAAjB,EAACM,EAAKC,mBAAW,QAAhBa,EAAkBC,YACnBvB,EAAAA,EAAAA,MAAAA,OAAAA,CAAMc,UAAU,0BAAyBZ,SAAAA,CAAC,IACtB,QAAjB,EAACM,EAAKC,mBAAW,aAAhBe,EAAkBD,SAAS,IAAE,QAGnCpB,EAAAA,EAAAA,KAAAA,OAAAA,CAAMkB,SAAS,WAAUnB,SAAEP,UAG/BQ,EAAAA,EAAAA,KAAAA,OAAAA,CAAMsB,SAAgC,QAAxB,EAAkB,QAAlB,EAAEjB,EAAKC,mBAAW,aAAhBiB,EAAkBC,YAAI,aAAIC,EAAU1B,SACjC,QADiCA,EACjDM,EAAKC,mBAAW,aAAhBoB,EAAkBF,SAEF,QAAjB,EAACnB,EAAKC,mBAAW,QAAhBqB,EAAkBC,QACnB5B,EAAAA,EAAAA,KAAAA,MAAAA,CAAKW,UAAU,sBAAqBZ,SACjB,QADiBA,EACjCM,EAAKC,mBAAW,aAAhBuB,EAAkBD,KAAKxB,KAAK0B,IAC3B9B,EAAAA,EAAAA,KAAAA,OAAAA,CAAAD,SAAiB+B,GAANA,WAKnB9B,EAAAA,EAAAA,KAAAA,UAAAA,CAAAD,UACEC,EAAAA,EAAAA,KAAAA,IAAAA,CACE+B,wBAAyB,CACvBC,QACkB,QAAhB,EAAA3B,EAAKC,mBAAW,aAAhB2B,EAAkBC,cAAe7B,EAAK8B,SAAW,IAErDjB,SAAS,sBAnCG,QAsCR,EAtCHb,EAAKG,cAAM,aAAX4B,EAAa1B,KAuCjB,QAIJ,EAWN,MAAM2B,EAAO,KAAMrC,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAAC9C,MAAM,a","sources":["webpack://blog/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Link, graphql, PageProps } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { FC } from \"react\";\n\nconst BlogIndex: FC<PageProps<Queries.IndexPageQueryQuery>> = ({\n  data,\n  location,\n}) => {\n  const siteTitle = data.site?.siteMetadata?.title || `Title`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map((post) => {\n          const title = post.frontmatter?.title || post.fields?.slug;\n\n          return (\n            <li key={post.fields?.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n                role=\"article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields?.slug || \"\"} itemProp=\"url\">\n                      {!!post.frontmatter?.category && (\n                        <span className=\"post-list-item-category\">\n                          [{post.frontmatter?.category}]{\" \"}\n                        </span>\n                      )}\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <time dateTime={post.frontmatter?.date ?? undefined}>\n                    {post.frontmatter?.date}\n                  </time>\n                  {!!post.frontmatter?.tags && (\n                    <div className=\"post-list-item-tags\">\n                      {post.frontmatter?.tags.map((tag) => (\n                        <span key={tag}>{tag}</span>\n                      ))}\n                    </div>\n                  )}\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html:\n                        post.frontmatter?.description || post.excerpt || \"\",\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />;\n\nexport const pageQuery = graphql`\n  query IndexPageQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          category\n          tags\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","data","location","siteTitle","site","_data$site","siteMetadata","_data$site$siteMetada","title","posts","allMarkdownRemark","nodes","length","_jsxs","Layout","children","_jsx","Bio","style","listStyle","map","post","frontmatter","_post$frontmatter","fields","_post$fields","slug","className","itemScope","itemType","role","Link","to","_post$fields3","itemProp","_post$frontmatter2","category","_post$frontmatter3","dateTime","_post$frontmatter4","date","undefined","_post$frontmatter5","_post$frontmatter6","tags","_post$frontmatter7","tag","dangerouslySetInnerHTML","__html","_post$frontmatter8","description","excerpt","_post$fields2","Head","Seo"],"sourceRoot":""}